var searchIndex = JSON.parse('{\
"melior_next":{"doc":"Melior-next is the rustic MLIR bindings for Rust. It aims â€¦","t":[13,13,3,3,4,3,13,13,13,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,3,3,2,2,3,3,3,2,2,3,3,2,8,3,8,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,2,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["BlockArgumentExpected","BlockArgumentPosition","Context","ContextRef","Error","ExecutionEngine","FunctionExpected","FunctionInputPosition","FunctionResultPosition","InvokeFunction","MemRefExpected","OperationResultExpected","OperationResultPosition","ParsePassPipeline","RunPass","StringRef","TupleExpected","TupleFieldPosition","allow_unregistered_dialects","append_dialect_registry","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","dialect","drop","drop","enable_multi_threading","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_or_load_dialect","into","into","into","into","into","invoke_packed","ir","is_registered_operation","load_all_available_dialects","loaded_dialect_count","new","new","pass","provide","registered_dialect_count","set_allow_unregistered_dialects","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","utility","Dialect","Handle","Registry","async","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cf","clone","clone","clone_into","clone_into","context","default","drop","eq","fmt","fmt","fmt","from","from","from","func","gpu","insert_dialect","into","into","into","linalg","llvm","llvm","load_dialect","namespace","namespace","new","pdl","quant","register_dialect","scf","shape","sparse_tensor","tensor","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type","array","function","pointer","struct","void","AffineMap","Attribute","Block","BlockRef","Identifier","Location","Module","Operation","OperationRef","Region","RegionRef","Type","TypeLike","Value","ValueLike","append_block","as_operation","as_string_ref","block","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","context","context","context","default","deref","drop","drop","dump","dump","dump","dump","eq","eq","eq","eq","eq","eq","eq","first_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_operation","fused","insert_block_after","insert_block_before","into","into","into","into","into","into","into","into","is_affine_map","is_array","is_block_argument","is_block_argument","is_bool","is_dense_elements","is_dense_float_elements","is_dense_integer_elements","is_dictionary","is_elements","is_float","is_integer","is_integer_set","is_null","is_opaque","is_operation_result","is_operation_result","is_sparse_elements","is_string","is_symbol","is_type","is_unit","name","new","new","new","new","null","operation","parse","parse","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","Argument","Block","BlockRef","add_argument","append_operation","argument","argument_count","argument_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","detach","drop","eq","eq","first_operation","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","insert_operation","insert_operation_after","insert_operation_before","into","into","into","new","next_in_region","owner","parent_operation","parent_region","set_type","terminator","to_owned","to_owned","to_raw","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Builder","Operation","OperationRef","ResultValue","add_attributes","add_operands","add_regions","add_results","add_successors","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","context","deref","drop","dump","enable_result_type_inference","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","name","new","next_in_block","owner","region","region_count","result","result_count","result_number","to_owned","to_owned","to_owned","to_raw","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","Function","Id","Tuple","Type","TypeLike","bfloat16","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","context","context","dump","dump","dump","eq","float16","float32","float64","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","id","id","index","input","input_count","integer","into","into","into","is_bfloat16","is_bfloat16","is_bfloat16","is_float16","is_float16","is_float16","is_float32","is_float32","is_float32","is_float64","is_float64","is_float64","is_function","is_function","is_function","is_mem_ref","is_mem_ref","is_mem_ref","is_tuple","is_tuple","is_tuple","is_vector","is_vector","is_vector","new","new","none","parse","result","result_count","signed_integer","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type","type_count","type_id","type_id","type_id","unsigned_integer","vector","vector_checked","Allocator","Id","allocate_type_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","drop","eq","fmt","fmt","from","from","hash","into","into","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Manager","OperationManager","Pass","add_pass","add_pass","as_operation_pass_manager","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","conversion","drop","enable_ir_printing","enable_verifier","fmt","fmt","from","from","from","into","into","into","nested_under","nested_under","new","run","to_owned","to_string","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","convert_affine_for_to_gpu","convert_affine_to_standard","convert_affiner_for_to_gpu","convert_arithmetic_to_llvm","convert_async_to_llvm","convert_cf_to_llvm","convert_cf_to_spirv","convert_func_to_llvm","convert_gpu_to_llvm","convert_math_to_libm","convert_math_to_llvm","convert_math_to_spirv","convert_scf_to_cf","canonicalizer","cse","inliner","print_operation_stats","register_canonicalizer","register_cse","register_inliner","register_print_operation_stats","register_sccp","register_strip_debug_info","register_symbol_dce","register_symbol_privatize","sccp","strip_debug_info","symbol_dce","symbol_privatize","parse_pass_pipeline","register_all_dialects","register_all_llvm_translations","register_all_passes"],"q":["melior_next","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::dialect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::dialect::llvm","melior_next::dialect::llvm::type","","","","","melior_next::irmelior_next::ir::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::ir::operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::ir::type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::ir::type::id","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::pass","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","melior_next::pass::conversion","","","","","","","","","","","","","melior_next::pass::transform","","","","","","","","","","","","","","","","melior_next::utility","","",""],"d":["","","A context of IR, dialects, and passes.","A reference to a context.","A Melior error.","An execution engine.","","","","","","","","","","A string reference.","","","Returns <code>true</code> if unregistered dialects are allowed.","Appends a dialect registry.","Converts a string reference into a <code>str</code>.","","","","","","","","","","","","","","","","","Dialect handles, instances, and registry.","","","Enables multi-threading.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Gets or loads a dialect.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invokes a function in a module. The <code>arguments</code> argument â€¦","IR objects and builders.","Returns <code>true</code> if a given operation is registered in a â€¦","Loads all available dialects.","Gets a number of loaded dialects.","Creates an ExecutionEngine for the provided Module.","Creates a context.","Passes and pass managers.","","Gets a number of registered dialects.","Set if unregistered dialects are allowed.","","","","","","","","","","","","","","","","","","","Utility functions.","A dialect.","A dialect handle.","A dialect registry.","Creates a <code>async</code> dialect handle.","","","","","","","Creates a <code>cf</code> dialect handle.","","","","","Gets a context.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>func</code> dialect handle.","Creates a <code>gpu</code> dialect handle.","Inserts a dialect into a dialect registry.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a <code>linalg</code> dialect handle.","The <code>llvm</code> dialect","Creates a <code>llvm</code> dialect handle.","Loads a dialect into a context.","Gets a namespace.","Gets a namespace.","Creates a dialect registry.","Creates a <code>pdl</code> dialect handle.","Creates a <code>quant</code> dialect handle.","Registers a dialect into a context.","Creates a <code>scf</code> dialect handle.","Creates a <code>shape</code> dialect handle.","Creates a <code>sparse_tensor</code> dialect handle.","Creates a <code>tensor</code> dialect handle.","","","","","","","","","","","","LLVM types","Creates an LLVM array type.","Creates an LLVM function type.","Creates an LLVM pointer type.","Creates an LLVM struct type.","Creates an LLVM void type.","An affine map.","An attribute.","","","An identifier.","A location","A module.","","","A region.","A reference to a region.","","Trait for type-like types.","A value.","Trait for value-like types.","Appends a block.","Converts a module into an operation.","Converts an identifier into a string reference.","Blocks.","Gets a block of a module body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a context.","Gets a context.","Gets a context.","Gets a context.","Gets a context.","","","","","Dumps a value.","Dumps a value.","Dumps an affine map.","Dumps an attribute.","","","","","","","","Gets the first block in a region.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Converts an operation into a module.","Creates a fused location.","Inserts a block after another block.","Inserts a block before another block.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if an attribute is a affine map.","Returns <code>true</code> if an attribute is a array.","Returns <code>true</code> if a value is a block argument.","Returns <code>true</code> if a value is a block argument.","Returns <code>true</code> if an attribute is a bool.","Returns <code>true</code> if an attribute is dense elements.","Returns <code>true</code> if an attribute is dense float elements.","Returns <code>true</code> if an attribute is dense integer elements.","Returns <code>true</code> if an attribute is a dictionary.","Returns <code>true</code> if an attribute is elements.","Returns <code>true</code> if an attribute is a float.","Returns <code>true</code> if an attribute is an integer.","Returns <code>true</code> if an attribute is an integer set.","Returns <code>true</code> if an attribute is null.","Returns <code>true</code> if an attribute is opaque.","Returns <code>true</code> if a value is an operation result.","Returns <code>true</code> if a value is an operation result.","Returns <code>true</code> if an attribute is sparse elements.","Returns <code>true</code> if an attribute is a string.","Returns <code>true</code> if an attribute is a symbol.","Returns <code>true</code> if an attribute is a type.","Returns <code>true</code> if an attribute is a unit.","Creates a name location.","Creates an identifier.","Creates a location with a filename and line and column â€¦","Creates a module.","Creates a region.","Creates a null attribute.","Operations and operation builders.","Parses an attribute.","Parses a module.","","","","","","","Converts a type into a raw type.","Converts a value into a raw value.","","","","","","","","","","","","","","","","","","","","","","Types and type IDs.","Gets a type.","Gets a type.","Gets a type.","","Gets a type ID.","","","","","","","","Creates an unknown location.","A block argument.","A block.","A reference of a block.","Adds an argument.","Appends an operation.","Gets an argument at a position.","Gets a number of arguments.","","","","","","","","","","","","","Detaches a block from a region and assumes its ownership.","","","","Gets the first operation.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Inserts an operation.","Inserts an operation after another.","Inserts an operation before another.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a block.","Gets a next block in a region.","","Gets a parent operation.","Gets a parent region.","","Gets a terminator operation.","","","","","","","","","","","","","","","","","An operation builder.","An operation.","A reference to an operation.","An operation result.","Adds attributes.","Adds operands.","Adds regions.","Adds results.","Adds successor blocks.","Gets a block.","","","","","","","","","Builds an operation.","","","","","","","Gets a context.","","","Dumps an operation.","Enables result type inference.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets a name.","Creates an operation builder.","Gets the next operation in the same block.","","Gets a result at an index.","Gets a number of regions.","Gets a result at a position.","Gets a number of results.","","","","","","","","","","","","","","","","","","","","","","Verifies an operation.","A function type.","","A tuple type.","A type.","Trait for type-like types.","Creates a bfloat16 type.","","","","","","","","","","","","","Gets a context.","Gets a context.","Gets a context.","Dumps a type.","Dumps a type.","Dumps a type.","","Creates a float16 type.","Creates a float32 type.","Creates a float64 type.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Type IDs and allocators","Gets an ID.","Gets an ID.","Gets an ID.","Creates an index type.","Gets an input at a position.","Gets a number of inputs.","Creates an integer type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if a type is bfloat16.","Returns <code>true</code> if a type is bfloat16.","Returns <code>true</code> if a type is bfloat16.","Returns <code>true</code> if a type is float16.","Returns <code>true</code> if a type is float16.","Returns <code>true</code> if a type is float16.","Returns <code>true</code> if a type is float32.","Returns <code>true</code> if a type is float32.","Returns <code>true</code> if a type is float32.","Returns <code>true</code> if a type is float64.","Returns <code>true</code> if a type is float64.","Returns <code>true</code> if a type is float64.","Returns <code>true</code> if a type is a function.","Returns <code>true</code> if a type is a function.","Returns <code>true</code> if a type is a function.","Returns <code>true</code> if a type is a memory reference.","Returns <code>true</code> if a type is a memory reference.","Returns <code>true</code> if a type is a memory reference.","Returns <code>true</code> if a type is a tuple.","Returns <code>true</code> if a type is a tuple.","Returns <code>true</code> if a type is a tuple.","Returns <code>true</code> if a type is a vector.","Returns <code>true</code> if a type is a vector.","Returns <code>true</code> if a type is a vector.","Creates a function type.","Creates a tuple type.","Creates a none type.","Parses a type.","Gets a result at a position.","Gets a number of results.","Creates a signed integer type.","","","","Converts a type into a raw type.","","","","","","","","","","","","","","","Gets a field at a position.","Gets a number of fields.","","","","Creates an unsigned integer type.","Creates a vector type.","Creates a vector type with diagnostics.","A type ID allocator.","A type ID.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","A pass manager.","An operation pass manager.","A pass.","Adds a pass.","Adds a pass.","Converts a pass manager to an operation pass manager.","","","","","","","","","Dialect conversion passes.","","Enables IR printing.","Enables a verifier.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets an operation pass manager for nested operations â€¦","Gets an operation pass manager for nested operations â€¦","Creates a pass manager.","Runs passes added to a pass manager against a module.","","","General transformation passes.","","","","","","","","","","Creates a pass to convert the <code>affine for</code> dialect to the <code>gpu</code>â€¦","Creates a pass to convert the <code>affine</code> dialect to the â€¦","Creates a pass to convert the <code>affiner for</code> dialect to the â€¦","Creates a pass to convert the <code>arith</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>async</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>cf</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>cf</code> dialect to the <code>spirv</code> â€¦","Creates a pass to convert the <code>func</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>gpu</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>math</code> dialect to the <code>libm</code> â€¦","Creates a pass to convert the <code>math</code> dialect to the <code>llvm</code> â€¦","Creates a pass to convert the <code>math</code> dialect to the <code>spirv</code> â€¦","Creates a pass to convert the <code>scf</code> dialect to the <code>cf</code> â€¦","Creates a pass to canonicalize IR.","Creates a pass to eliminate common sub-expressions.","Creates a pass to inline function calls.","Creates a pass to print operation statistics.","Registers a pass to canonicalize IR.","Registers a pass to print operation stats.","Registers a pass to inline function calls.","Registers a pass to print operation stats.","Registers a pass to propagate constants.","Registers a pass to strip debug information.","Registers a pass to eliminate dead symbols.","Registers a pass to mark all top-level symbols private.","Creates a pass to propagate constants.","Creates a pass to strip debug information.","Creates a pass to eliminate dead symbols.","Creates a pass to mark all top-level symbols private.","Parses a pass pipeline.","Registers all dialects to a dialect registry.","Register all translations from other dialects to the <code>llvm</code> â€¦","Register all passes."],"i":[10,10,0,0,0,0,10,10,10,10,10,10,10,10,10,0,10,10,1,1,4,9,1,8,10,4,9,1,8,10,4,8,4,8,4,1,8,0,9,1,1,1,8,10,4,1,8,10,10,4,9,1,8,10,4,4,1,9,1,8,10,4,9,0,1,1,1,9,1,0,10,1,1,8,4,10,9,1,8,10,4,9,1,8,10,4,9,1,8,10,4,0,0,0,0,19,19,3,13,19,3,13,19,19,13,19,13,13,3,3,13,19,3,13,19,3,13,19,19,19,19,3,13,19,0,19,19,19,13,3,19,19,19,19,19,19,19,19,13,19,3,13,19,3,13,19,3,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,15,26,0,15,27,28,26,29,15,22,30,31,27,28,26,29,15,22,30,31,27,28,26,29,30,31,27,28,26,29,30,31,27,28,26,29,15,22,30,15,22,45,45,27,28,27,28,26,29,22,30,31,22,27,27,28,28,26,29,29,15,22,30,31,31,27,28,26,29,15,22,30,31,31,31,15,29,22,22,27,28,26,29,15,22,30,31,28,28,45,45,28,28,28,28,28,28,28,28,28,28,28,45,45,28,28,28,28,28,29,26,29,15,22,28,0,28,15,27,28,26,29,30,31,46,45,31,27,28,29,31,27,28,26,29,15,22,30,31,27,28,26,29,15,22,30,31,0,45,45,28,27,28,28,26,29,15,22,30,31,29,0,0,0,23,23,23,23,34,23,34,24,23,34,24,34,24,34,24,24,23,23,23,24,23,23,23,34,34,24,24,23,34,24,23,23,23,23,34,24,23,23,34,23,23,34,23,34,24,34,23,34,24,23,34,34,24,23,34,24,23,34,24,0,0,0,0,37,37,37,37,37,35,37,35,33,25,37,35,33,25,37,35,33,25,35,33,25,35,25,35,35,37,35,25,35,35,33,33,25,25,37,35,33,25,37,35,33,25,35,37,35,33,35,35,35,35,33,35,33,25,33,35,33,25,37,35,33,33,25,37,35,33,25,37,35,33,25,35,0,0,0,0,0,20,39,40,20,39,40,20,39,40,20,39,40,20,46,46,46,46,46,46,20,20,20,20,39,39,40,40,20,20,39,40,20,20,20,0,46,46,46,20,39,39,20,39,40,20,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,39,40,20,20,39,39,20,39,40,20,46,39,40,20,39,40,20,39,39,40,40,20,39,40,20,40,40,39,40,20,20,20,20,0,0,41,41,36,41,36,36,36,41,41,36,41,36,41,36,36,41,36,41,36,41,36,41,36,41,36,0,0,0,42,44,42,42,43,44,42,43,44,44,44,0,42,42,42,44,44,42,43,44,42,43,44,42,44,42,42,44,44,0,42,43,44,42,43,44,42,43,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[1,3]],[4,[[7,[5,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[4,4],[[]],[[]],[[],1],[8],0,[9],[1],[[1,2]],[[1,1],2],[[8,8],2],[[10,10],2],[[4,4],2],[[1,11],12],[[8,11],12],[[10,11],12],[[10,11],12],[[4,11],12],[[]],[[]],[[]],[[]],[5,4],[[]],[[1,5],13],[[]],[[]],[[]],[[]],[[]],[[9,5],[[7,[10]]]],0,[[1,5],2],[1],[1,14],[[15,14,2],9],[[],1],0,[16],[1,14],[[1,2]],[[]],[[]],[[],17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[19,19],[13,13],[[]],[[]],[13,8],[[],3],[3],[[13,13],2],[[19,11],12],[[3,11],12],[[13,11],12],[[]],[[]],[[]],[[],19],[[],19],[[19,3]],[[]],[[]],[[]],[[],19],0,[[],19],[[19,1],13],[19,4],[13,4],[[],3],[[],19],[[],19],[[19,1]],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],0,[[20,21],20],[[20,2],20],[[20,21],20],[[1,2],20],[1,20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,23],24],[15,25],[26,4],0,[15,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[28,28],[26,26],[29,29],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[27,8],[28,8],[26,8],[29,8],[15,8],[[],22],[30],[15],[22],[[]],[[]],[27],[28],[[27,27],2],[[28,28],2],[[26,26],2],[[29,29],2],[[22,22],2],[[30,30],2],[[31,31],2],[22,[[32,[24]]]],[[27,11],12],[[27,11],12],[[28,11],12],[[28,11],12],[[26,11],12],[[29,11],12],[[29,11],12],[[15,11],12],[[22,11],12],[[30,11],12],[[31,11],12],[[31,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,31],[34,31],[35,[[32,[15]]]],[[1,28],29],[[22,24,23],24],[[22,24,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,2],[28,2],[[],2],[[],2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[28,2],[[],2],[[],2],[28,2],[28,2],[28,2],[28,2],[28,2],[[1,5,29],29],[[1,5],26],[[1,5,14,14],29],[29,15],[[],22],[[],28],0,[[1,5],[[32,[28]]]],[[1,5],[[32,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[],20],[[],20],[28,[[32,[20]]]],[[],18],[28,[[32,[36]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[1,29],0,0,0,[[23,20,29],31],[[23,35],25],[[23,14],[[7,[34,10]]]],[23,14],[34,14],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[24,24],[[]],[[]],[24],[23,[[32,[23]]]],[23],[[23,23],2],[[24,24],2],[23,[[32,[25]]]],[[23,11],12],[[23,11],12],[[34,11],12],[[34,11],12],[[24,11],12],[[24,11],12],[[]],[[]],[[]],[[23,14,35],25],[[23,25,35],25],[[23,25,35],25],[[]],[[]],[[]],[[],23],[23,[[32,[24]]]],[34,24],[23,[[32,[25]]]],[23,[[32,[30]]]],[[34,20]],[23,[[32,[25]]]],[[]],[[]],0,[[],17],[[],17],[[],17],[[],7],[[],7],[31,[[7,[34]]]],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],0,0,0,0,[37,37],[37,37],[[37,[38,[22]]],37],[37,37],[37,37],[35,[[32,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,35],[35,35],[33,33],[25,25],[[]],[[]],[[]],[35,8],[25],[35],[35],[37,37],[[35,35],2],[[25,25],2],[[35,11],12],[[35,11],12],[[33,11],12],[[33,11],12],[[25,11],12],[[25,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,26],[[5,29],37],[35,[[32,[25]]]],[33,25],[[35,14],[[32,[30]]]],[35,14],[[35,14],[[7,[33,10]]]],[35,14],[33,14],[[]],[[]],[[]],0,[[],17],[[],17],[[],17],[[],7],[[],7],[[],7],[31,[[7,[33]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],[[],18],[35,2],0,0,0,0,0,[1,20],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[40,40],[20,20],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[20,20],2],[1,20],[1,20],[1,20],[[39,11],12],[[39,11],12],[[40,11],12],[[40,11],12],[[20,11],12],[[20,11],12],[[]],[[]],[[]],[40,20],[39,20],0,[[],36],[[],36],[[],36],[1,20],[[39,14],[[7,[20,10]]]],[39,14],[[1,21],20],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[1,39],[1,40],[1,20],[[1,5],[[32,[20]]]],[[39,14],[[7,[20,10]]]],[39,14],[[1,21],20],[[]],[[]],[[]],0,0,0,0,[[],17],[[],17],[[],17],[[],7],[20,[[7,[39]]]],[[],7],[20,[[7,[40]]]],[[],7],[[],7],[[],7],[[],7],[[40,14],[[7,[20,10]]]],[40,14],[[],18],[[],18],[[],18],[[1,21],20],[20,20],[[29,20],[[32,[20]]]],0,0,[41,36],[[]],[[]],[[]],[[]],[36,36],[[]],[[],41],[41],[[36,36],2],[[41,11],12],[[36,11],12],[[]],[[]],[36],[[]],[[]],[[],41],[[]],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],0,0,0,[[42,43]],[[44,43]],[42,44],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[[]],0,[42],[42],[[42,2]],[[44,11],12],[[44,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[42,5],44],[[44,5],44],[1,42],[[42,15],[[7,[10]]]],[[]],[[],17],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],18],[[],18],[[],18],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],43],[[],43],[[44,5],[[7,[10]]]],[3],[1],[[]]],"p":[[3,"Context"],[15,"bool"],[3,"Registry"],[3,"StringRef"],[15,"str"],[3,"Utf8Error"],[4,"Result"],[3,"ContextRef"],[3,"ExecutionEngine"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Dialect"],[15,"usize"],[3,"Module"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"Handle"],[3,"Type"],[15,"u32"],[3,"Region"],[3,"Block"],[3,"BlockRef"],[3,"OperationRef"],[3,"Identifier"],[3,"AffineMap"],[3,"Attribute"],[3,"Location"],[3,"RegionRef"],[3,"Value"],[4,"Option"],[3,"ResultValue"],[3,"Argument"],[3,"Operation"],[3,"Id"],[3,"Builder"],[3,"Vec"],[3,"Function"],[3,"Tuple"],[3,"Allocator"],[3,"Manager"],[3,"Pass"],[3,"OperationManager"],[8,"ValueLike"],[8,"TypeLike"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
